@page "/admin"

@if (AccountProvider.AccountLoaded)
{
    @if (AccessControl.ContractLoaded)
    {
        <h5>Information</h5>
        <ContractInfo />
        <hr />

        @if (!AccessControl.Initialized)
        {
            <h5>Initialize the contract</h5>
            <ContractInitializer Initialized="async () => await InvokeAsync(StateHasChanged)" />
            <hr />
        }

        <h5>Admins</h5>
        <AdminManager />
        <hr />

        <h5>On-chain policies</h5>
        <OCPManager IsAdmin="true" />
        <hr />

        <h5>Policies</h5>
        <PolicyManager IsAdmin="true" />
        <hr />

        <h5>Proposals</h5>
        <ProposalManager IsAdmin="true" ProposalAccepted="async () => await InvokeAsync(StateHasChanged)" />
        <hr />

        <button class="btn btn-danger mb-3" @onclick="AccessControl.UnloadContract">Unload Contract</button>
    }
    else
    {
        <h5>Load or deploy a contract</h5>
        <ContractLoader OnLoaded="async () => await InvokeAsync(StateHasChanged)" />
        <ContractDeployer OnDeployed="async () => await InvokeAsync(StateHasChanged)" />
    }
}
else
{
    <span>Load your wallet first!</span>
}